// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Data.Context;

#nullable disable

namespace PetShop.Data.Migrations
{
    [DbContext(typeof(PSContext))]
    [Migration("20230108232107_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetShop.Domain.Entities.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("date")
                        .HasColumnName("data_consulta");

                    b.Property<TimeSpan>("HorarioConsulta")
                        .HasColumnType("time")
                        .HasColumnName("hora_consulta");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("consulta", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Dono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("dono", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DonoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("DonoId");

                    b.ToTable("pet", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeProcedimento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasPrecision(18, 2)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("valor_procedimento");

                    b.Property<decimal>("ValorProcedimento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("procedimento", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.ProcimentoDaConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcedimentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("ProcedimentoId");

                    b.ToTable("ProcedimentosDasConsultas");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Veterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("veterinario", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Consulta", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.Pet", null)
                        .WithMany("Consultas")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Domain.Entities.Veterinario", null)
                        .WithMany("Consultas")
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Dono", b =>
                {
                    b.OwnsOne("PetShop.Domain.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<int>("DonoId")
                                .HasColumnType("int");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("primeiro_nome");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("DonoId");

                            b1.ToTable("dono");

                            b1.WithOwner()
                                .HasForeignKey("DonoId");
                        });

                    b.OwnsOne("PetShop.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("DonoId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("bairro_endereco");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("cep_endereco");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("numero_endereco");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("rua_endereco");

                            b1.HasKey("DonoId");

                            b1.ToTable("dono");

                            b1.WithOwner()
                                .HasForeignKey("DonoId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.Dono", null)
                        .WithMany("Pets")
                        .HasForeignKey("DonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.ProcimentoDaConsulta", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.Consulta", null)
                        .WithMany("ProcedimentosDasConsultas")
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Domain.Entities.Procedimento", null)
                        .WithMany("ProcedimentosDasConsultas")
                        .HasForeignKey("ProcedimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Veterinario", b =>
                {
                    b.OwnsOne("PetShop.Domain.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<int>("VeterinarioId")
                                .HasColumnType("int");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("primeiro_nome");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("VeterinarioId");

                            b1.ToTable("veterinario");

                            b1.WithOwner()
                                .HasForeignKey("VeterinarioId");
                        });

                    b.Navigation("Nome")
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Consulta", b =>
                {
                    b.Navigation("ProcedimentosDasConsultas");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Dono", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Procedimento", b =>
                {
                    b.Navigation("ProcedimentosDasConsultas");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Veterinario", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
