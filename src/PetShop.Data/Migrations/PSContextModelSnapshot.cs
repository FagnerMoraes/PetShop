// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Data.Context;

#nullable disable

namespace PetShop.Data.Migrations
{
    [DbContext(typeof(PSContext))]
    partial class PSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetShop.Domain.Entities.CareProcedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VetCareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.HasIndex("VetCareId");

                    b.ToTable("CareProcedures");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.Property<int>("PetOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PetOwnerId");

                    b.ToTable("pet", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.PetOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("telefone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("pet_owner", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome_procedimento");

                    b.Property<decimal>("ProcedureValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_procedimento");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("procedimento", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Vet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("veterinario", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.VetCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CareProcedureDate")
                        .HasColumnType("date")
                        .HasColumnName("data_consulta");

                    b.Property<TimeSpan>("CareProcedureTime")
                        .HasColumnType("time")
                        .HasColumnName("hora_consulta");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("VetId");

                    b.ToTable("consulta", (string)null);
                });

            modelBuilder.Entity("PetShop.Domain.Entities.CareProcedure", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.Procedure", null)
                        .WithMany("CareProcedures")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Domain.Entities.VetCare", null)
                        .WithMany("ProcedimentosDasConsultas")
                        .HasForeignKey("VetCareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.PetOwner", null)
                        .WithMany("Pets")
                        .HasForeignKey("PetOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.PetOwner", b =>
                {
                    b.OwnsOne("PetShop.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("PetOwnerId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("primeiro_nome");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("PetOwnerId");

                            b1.ToTable("pet_owner");

                            b1.WithOwner()
                                .HasForeignKey("PetOwnerId");
                        });

                    b.OwnsOne("PetShop.Domain.ValueObjects.Adress", "Adress", b1 =>
                        {
                            b1.Property<int>("PetOwnerId")
                                .HasColumnType("int");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("bairro_endereco");

                            b1.Property<string>("HouseNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("numero_endereco");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("rua_endereco");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("cep_endereco");

                            b1.HasKey("PetOwnerId");

                            b1.ToTable("pet_owner");

                            b1.WithOwner()
                                .HasForeignKey("PetOwnerId");
                        });

                    b.Navigation("Adress")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Vet", b =>
                {
                    b.OwnsOne("PetShop.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("VetId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("primeiro_nome");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("VetId");

                            b1.ToTable("veterinario");

                            b1.WithOwner()
                                .HasForeignKey("VetId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.VetCare", b =>
                {
                    b.HasOne("PetShop.Domain.Entities.Pet", null)
                        .WithMany("VetCares")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Domain.Entities.Vet", null)
                        .WithMany("VetCares")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Pet", b =>
                {
                    b.Navigation("VetCares");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.PetOwner", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Procedure", b =>
                {
                    b.Navigation("CareProcedures");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.Vet", b =>
                {
                    b.Navigation("VetCares");
                });

            modelBuilder.Entity("PetShop.Domain.Entities.VetCare", b =>
                {
                    b.Navigation("ProcedimentosDasConsultas");
                });
#pragma warning restore 612, 618
        }
    }
}
